{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ping Lab Rotation Project Developing Knowledge Graphs relating Cardiovascular Disease and Oxidative Stress Google Slides detailing project progress can be found here Introduction Tools caseOLAP : A novel text-mining platform to find strenght of relation between entities in two categories through searching of PubMed ID abstracts. Neo4j : A popular graph database implementation used to represent the knowledge graph ElasticSearch : A powerful search engine allowing full text searches Methods Results","title":"Home"},{"location":"#ping-lab-rotation-project","text":"Developing Knowledge Graphs relating Cardiovascular Disease and Oxidative Stress Google Slides detailing project progress can be found here","title":"Ping Lab Rotation Project"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#tools","text":"caseOLAP : A novel text-mining platform to find strenght of relation between entities in two categories through searching of PubMed ID abstracts. Neo4j : A popular graph database implementation used to represent the knowledge graph ElasticSearch : A powerful search engine allowing full text searches","title":"Tools"},{"location":"#methods","text":"","title":"Methods"},{"location":"#results","text":"","title":"Results"},{"location":"implementation/Create_Drug_Cooccurance_Graph/","text":"Creating Co-Occurence Graph of Drugs-Chemicals-PMIDs This notebook creates a graph database storing the relation of drugs and chemicals related to oxidative stress and their occurance in PubMed abstracts Nodes are created for drugs, chemicals, articles, and MeSH terms. import neo4j_functions.driver as neo4j_driver import pandas as pd import importlib drug_list_df = pd.read_csv('lib/Drug list total 04.05.19 - Overview Drug list.csv') drug_occurance_df = pd.read_csv('lib/Drug_PMID_occurances.csv') chemical_list_df = pd.read_csv('lib/Oxidative Stress Text Mining Targets 4.1 - Summary of Oxidative Stress.csv') chemical_occurance_df = pd.read_csv('lib/Chemical_PMID_occurances.csv') Merging Drug List with Drug Occurance Data Sets Duplicate drug names in the lab provided list are merged, the drug with an associated category is kept if possible Deduplicated list of drug names is merged with a dataframe for drug occurance generated on the CaseOLAP cloud instance Notebook used to generate drug occurance list located at /home/ubuntu/RotationStd/elasticsearch/chemical_drug_elastic_occurance.ipynb Final merged dataframe saved in to import folder of neo4j instance # Removing Duplicate drug names, keeping version with a drug category if possible deduped_drug_list = drug_list_df.sort_values(by='Drug Category').drop_duplicates(subset=['Name'], keep='first') # Merging drug list with drug occurance list drug_occurance_df['MeSH'] = drug_occurance_df['MeSH'].str.replace('[', '').str.replace(']', '').str.replace( ' , '') drug_list_occurance_df = drug_occurance_df.merge( deduped_drug_list.rename(columns={ 'Name': 'drug', 'Drug Category': 'category', 'MeSH Descriptor': 'drug_mesh', }), how='inner', validate='m:1' ) # Values with NaN for category or synonym replaced # NaN for synonym replaced with drug name, category replaced with 'None' drug_list_occurance_df['drug'] = drug_list_occurance_df['drug'].str.strip() drug_list_occurance_df.loc[drug_list_occurance_df.MeSH == '', 'MeSH'] = 'None' drug_list_occurance_df.loc[drug_list_occurance_df.category.isnull(), 'category'] = 'None' drug_list_occurance_df.loc[drug_list_occurance_df.drug_mesh.isnull(), 'drug_mesh'] = 'None' drug_list_occurance_df.loc[drug_list_occurance_df.Synonyms.isnull(), 'Synonyms'] = drug_list_occurance_df[drug_list_occurance_df.Synonyms.isnull()].drug # Saving file to import area of local neo4j instance drug_list_occurance_file = '/Users/akre96/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-dc2bbd3b-84e9-421e-8594-9fe29be9bb02/installation-3.5.6/import/drug_list_occurance.csv' drug_list_occurance_df.to_csv(drug_list_occurance_file, index=False) drug_list_occurance_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title drug category # Synonyms drug_mesh MeSH tree(s) Common adverse effects Dosage (freq/amount/time/delivery) Duration (time) Pham Action 0 Actinomycetales, chemistry, enzymology, Adenos... 8784428 a phosphotransferase which modifies the alpha ... Acarbose 7-phosphotransferase from Actinoplane... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 1 Acarbose, Adult, Blood Glucose, metabolism, Cl... 6350115 in a double blind study we have compared the e... Effect of acarbose, pectin, a combination of a... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 2 Acarbose, Adult, Aged, Blood Glucose, metaboli... 9663365 acarbose is an alpha glucosidase inhibitor app... Effects of beano on the tolerability and pharm... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 3 Acarbose, administration dosage, Animals, Bo... 11779583 as alpha glucosidase inhibitor, the antidiabet... Chronic acarbose-feeding increases GLUT1 prote... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 4 Acarbose, Aged, Blood Glucose, metabolism, Dia... 9428831 to compare the therapeutic potential of acarbo... Efficacy of 24-week monotherapy with acarbose,... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors Creating Neo4J Graph Database for Drug occurance in PMIDs Neo4J Driver initialized Query formed to import data from list generated in previous section of this notebook Loading csv Creating drug entities with name, category, and synonym fields Creating article entities with PMID, abstract, title, and MeSH fields Creating edges labeled OCCURANCE for connecting drugs referenced by a PMID importlib.reload(neo4j_driver) driver = neo4j_driver.driver(uri = bolt://localhost:7687 , user = neo4j , password = drug1234 ) import_data_query = ( LOAD CSV WITH HEADERS FROM %s AS row MERGE (drug:Drug {name: row.drug, category: row.category, synonyms: row.Synonyms}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, %s)}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drugmesh:MeSH {name: row.drug_mesh}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drug)-[:HAS_MESH]- (drugmesh) % (' file:///' + 'drug_list_occurance.csv' + ' ', ', ' ) ) print('Query:\\n\\t', import_data_query) with driver.driver.session() as session: result = session.run(import_data_query) Query: LOAD CSV WITH HEADERS FROM file:///drug_list_occurance.csv AS row MERGE (drug:Drug {name: row.drug, category: row.category, synonyms: row.Synonyms}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, ', ')}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drugmesh:MeSH {name: row.drug_mesh}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drug)-[:HAS_MESH]- (drugmesh) Merging Chemical List with Chemical Occurance Data Sets deduped_chem_list = chemical_list_df\\ .dropna(subset=['Molecule/Enzyme/Protein'])\\ .sort_values(by='Molecular and Functional Categories')\\ .drop_duplicates(subset=['Molecule/Enzyme/Protein'], keep='first')\\ .fillna('None') chemical_occurance_df['MeSH'] = chemical_occurance_df['MeSH'].str.replace('[', '').str.replace(']', '').str.replace( ' , '') chem_list_occurance_df = chemical_occurance_df.merge( deduped_chem_list.rename(columns={ 'Molecule/Enzyme/Protein': 'chemical', 'Chemical Formula': 'formula', 'Molecular and Functional Categories': 'GO_MF', 'Biological Events of Oxidative Stress': 'GO_Oxidative_Stress', 'MeSH Heading': 'chemical_mesh' }), how='inner', validate='m:1' ).fillna('None') chem_list_occurance_df['chemical'] = chem_list_occurance_df.chemical.str.strip() chem_list_occurance_df.loc[chem_list_occurance_df.MeSH == '', 'MeSH'] = 'None' chem_list_occurance_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title chemical GO_Oxidative_Stress GO_MF chemical_mesh MeSH Supplementary MeSH tree numbers formula Examples Pharm Actions Tree Numbers References 0 None 31368101 coronary spasm plays an important role in the ... Association of East Asian Variant Aldehyde Deh... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 1 Acetylcholinesterase, metabolism, Aldehydes, m... 10463393 we have investigated the effect of soman induc... Increased levels of nitrogen oxides and lipid ... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 2 Aldehydes, chemistry, Amines, chemistry, Benzy... 8448343 the reaction of trans 4 hydroxy 2 nonenal (4 h... Pyrrole formation from 4-hydroxynonenal and pr... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 3 Animals, Blood-Brain Barrier, metabolism, path... 29775963 brain ischemic preconditioning (ipc) with mild... Brain ischemic preconditioning protects agains... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 4 Alzheimer Disease, drug therapy, enzymology, p... 30218858 excessive production of amyloid \u03b2 (a\u03b2) induced... Neuro-protective effects of aloperine in an Al... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None # Saving file to import area of local neo4j instance chem_list_occurance_file = '/Users/akre96/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-dc2bbd3b-84e9-421e-8594-9fe29be9bb02/installation-3.5.6/import/chem_list_occurance.csv' chem_list_occurance_df.to_csv(chem_list_occurance_file, index=False) Adding to Neo4J Graph Database for Chemical occurance in PMIDs Query formed to import data from list generated in previous section of this notebook Loading csv Creating chemical entities with name, example, and formula fields Merges article entities with PMID, abstract, title, and MeSH fields Creating edges labeled OCCURANCE for connecting drugs referenced by a PMID import_chemical_data_query = ( LOAD CSV WITH HEADERS FROM %s AS row MERGE (chem:Chemical {name: row.chemical, example: row.Examples, formula: row.formula}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, %s)}) MERGE (mesh:MeSH {name: row.chemical_mesh}) MERGE (chem)-[:OCCURANCE]- (article) MERGE (chem)-[:HAS_MESH]- (mesh) % (' file:///' + 'chem_list_occurance.csv' + ' ', ', ' ) ) print('Query:\\n\\t', import_chemical_data_query) with driver.driver.session() as session: result = session.run(import_chemical_data_query) Query: LOAD CSV WITH HEADERS FROM file:///chem_list_occurance.csv AS row MERGE (chem:Chemical {name: row.chemical, example: row.Examples, formula: row.formula}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, ', ')}) MERGE (mesh:MeSH {name: row.chemical_mesh}) MERGE (chem)-[:OCCURANCE]- (article) MERGE (chem)-[:HAS_MESH]- (mesh) Adding MeSH descriptors from Articles as MeSH node Adds nodes from mesh descriptor list Deletes \"none\" node article_mesh_descriptors_query = ( MATCH (article:Article) UNWIND article.MeSH AS m MERGE (artMesh:MeSH {name: m}) MERGE (article)-[:HAS_MESH]- (artMesh) ) print('Query:\\n\\t', article_mesh_descriptors_query) with driver.driver.session() as session: result = session.run(article_mesh_descriptors_query) Query: MATCH (article:Article) UNWIND article.MeSH AS m MERGE (artMesh:MeSH {name: m}) MERGE (article)-[:HAS_MESH]- (artMesh) delete_none_mesh_descriptors_query = ( MATCH (m:MeSH {name: 'None'}) DETACH DELETE m ) print('Query:\\n\\t', delete_none_mesh_descriptors_query) with driver.driver.session() as session: result = session.run(delete_none_mesh_descriptors_query) Query: MATCH (m:MeSH {name: 'None'}) DETACH DELETE m","title":"Creating Drug/Chemical Co-Occurence GraphDB"},{"location":"implementation/Create_Drug_Cooccurance_Graph/#creating-co-occurence-graph-of-drugs-chemicals-pmids","text":"This notebook creates a graph database storing the relation of drugs and chemicals related to oxidative stress and their occurance in PubMed abstracts Nodes are created for drugs, chemicals, articles, and MeSH terms. import neo4j_functions.driver as neo4j_driver import pandas as pd import importlib drug_list_df = pd.read_csv('lib/Drug list total 04.05.19 - Overview Drug list.csv') drug_occurance_df = pd.read_csv('lib/Drug_PMID_occurances.csv') chemical_list_df = pd.read_csv('lib/Oxidative Stress Text Mining Targets 4.1 - Summary of Oxidative Stress.csv') chemical_occurance_df = pd.read_csv('lib/Chemical_PMID_occurances.csv')","title":"Creating Co-Occurence Graph of Drugs-Chemicals-PMIDs"},{"location":"implementation/Create_Drug_Cooccurance_Graph/#merging-drug-list-with-drug-occurance-data-sets","text":"Duplicate drug names in the lab provided list are merged, the drug with an associated category is kept if possible Deduplicated list of drug names is merged with a dataframe for drug occurance generated on the CaseOLAP cloud instance Notebook used to generate drug occurance list located at /home/ubuntu/RotationStd/elasticsearch/chemical_drug_elastic_occurance.ipynb Final merged dataframe saved in to import folder of neo4j instance # Removing Duplicate drug names, keeping version with a drug category if possible deduped_drug_list = drug_list_df.sort_values(by='Drug Category').drop_duplicates(subset=['Name'], keep='first') # Merging drug list with drug occurance list drug_occurance_df['MeSH'] = drug_occurance_df['MeSH'].str.replace('[', '').str.replace(']', '').str.replace( ' , '') drug_list_occurance_df = drug_occurance_df.merge( deduped_drug_list.rename(columns={ 'Name': 'drug', 'Drug Category': 'category', 'MeSH Descriptor': 'drug_mesh', }), how='inner', validate='m:1' ) # Values with NaN for category or synonym replaced # NaN for synonym replaced with drug name, category replaced with 'None' drug_list_occurance_df['drug'] = drug_list_occurance_df['drug'].str.strip() drug_list_occurance_df.loc[drug_list_occurance_df.MeSH == '', 'MeSH'] = 'None' drug_list_occurance_df.loc[drug_list_occurance_df.category.isnull(), 'category'] = 'None' drug_list_occurance_df.loc[drug_list_occurance_df.drug_mesh.isnull(), 'drug_mesh'] = 'None' drug_list_occurance_df.loc[drug_list_occurance_df.Synonyms.isnull(), 'Synonyms'] = drug_list_occurance_df[drug_list_occurance_df.Synonyms.isnull()].drug # Saving file to import area of local neo4j instance drug_list_occurance_file = '/Users/akre96/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-dc2bbd3b-84e9-421e-8594-9fe29be9bb02/installation-3.5.6/import/drug_list_occurance.csv' drug_list_occurance_df.to_csv(drug_list_occurance_file, index=False) drug_list_occurance_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title drug category # Synonyms drug_mesh MeSH tree(s) Common adverse effects Dosage (freq/amount/time/delivery) Duration (time) Pham Action 0 Actinomycetales, chemistry, enzymology, Adenos... 8784428 a phosphotransferase which modifies the alpha ... Acarbose 7-phosphotransferase from Actinoplane... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 1 Acarbose, Adult, Blood Glucose, metabolism, Cl... 6350115 in a double blind study we have compared the e... Effect of acarbose, pectin, a combination of a... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 2 Acarbose, Adult, Aged, Blood Glucose, metaboli... 9663365 acarbose is an alpha glucosidase inhibitor app... Effects of beano on the tolerability and pharm... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 3 Acarbose, administration dosage, Animals, Bo... 11779583 as alpha glucosidase inhibitor, the antidiabet... Chronic acarbose-feeding increases GLUT1 prote... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors 4 Acarbose, Aged, Blood Glucose, metabolism, Dia... 9428831 to compare the therapeutic potential of acarbo... Efficacy of 24-week monotherapy with acarbose,... Acarbose Alpha-glucosidase Inhibitors 54 Acarbosa, Acarbose, Acarbosum Acarbose D09.698.629.802.100 Hypoglycaemia, Hypoglycaemic \\ncoma, pneumatos... 3/25-50-100mg/day/po 4-8 weeks intervals Glycoside \\nHydrolase Inhibitors","title":"Merging Drug List with Drug Occurance Data Sets"},{"location":"implementation/Create_Drug_Cooccurance_Graph/#creating-neo4j-graph-database-for-drug-occurance-in-pmids","text":"Neo4J Driver initialized Query formed to import data from list generated in previous section of this notebook Loading csv Creating drug entities with name, category, and synonym fields Creating article entities with PMID, abstract, title, and MeSH fields Creating edges labeled OCCURANCE for connecting drugs referenced by a PMID importlib.reload(neo4j_driver) driver = neo4j_driver.driver(uri = bolt://localhost:7687 , user = neo4j , password = drug1234 ) import_data_query = ( LOAD CSV WITH HEADERS FROM %s AS row MERGE (drug:Drug {name: row.drug, category: row.category, synonyms: row.Synonyms}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, %s)}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drugmesh:MeSH {name: row.drug_mesh}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drug)-[:HAS_MESH]- (drugmesh) % (' file:///' + 'drug_list_occurance.csv' + ' ', ', ' ) ) print('Query:\\n\\t', import_data_query) with driver.driver.session() as session: result = session.run(import_data_query) Query: LOAD CSV WITH HEADERS FROM file:///drug_list_occurance.csv AS row MERGE (drug:Drug {name: row.drug, category: row.category, synonyms: row.Synonyms}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, ', ')}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drugmesh:MeSH {name: row.drug_mesh}) MERGE (drug)-[:OCCURANCE]- (article) MERGE (drug)-[:HAS_MESH]- (drugmesh)","title":"Creating Neo4J Graph Database for Drug occurance in PMIDs"},{"location":"implementation/Create_Drug_Cooccurance_Graph/#merging-chemical-list-with-chemical-occurance-data-sets","text":"deduped_chem_list = chemical_list_df\\ .dropna(subset=['Molecule/Enzyme/Protein'])\\ .sort_values(by='Molecular and Functional Categories')\\ .drop_duplicates(subset=['Molecule/Enzyme/Protein'], keep='first')\\ .fillna('None') chemical_occurance_df['MeSH'] = chemical_occurance_df['MeSH'].str.replace('[', '').str.replace(']', '').str.replace( ' , '') chem_list_occurance_df = chemical_occurance_df.merge( deduped_chem_list.rename(columns={ 'Molecule/Enzyme/Protein': 'chemical', 'Chemical Formula': 'formula', 'Molecular and Functional Categories': 'GO_MF', 'Biological Events of Oxidative Stress': 'GO_Oxidative_Stress', 'MeSH Heading': 'chemical_mesh' }), how='inner', validate='m:1' ).fillna('None') chem_list_occurance_df['chemical'] = chem_list_occurance_df.chemical.str.strip() chem_list_occurance_df.loc[chem_list_occurance_df.MeSH == '', 'MeSH'] = 'None' chem_list_occurance_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title chemical GO_Oxidative_Stress GO_MF chemical_mesh MeSH Supplementary MeSH tree numbers formula Examples Pharm Actions Tree Numbers References 0 None 31368101 coronary spasm plays an important role in the ... Association of East Asian Variant Aldehyde Deh... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 1 Acetylcholinesterase, metabolism, Aldehydes, m... 10463393 we have investigated the effect of soman induc... Increased levels of nitrogen oxides and lipid ... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 2 Aldehydes, chemistry, Amines, chemistry, Benzy... 8448343 the reaction of trans 4 hydroxy 2 nonenal (4 h... Pyrrole formation from 4-hydroxynonenal and pr... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 3 Animals, Blood-Brain Barrier, metabolism, path... 29775963 brain ischemic preconditioning (ipc) with mild... Brain ischemic preconditioning protects agains... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None 4 Alzheimer Disease, drug therapy, enzymology, p... 30218858 excessive production of amyloid \u03b2 (a\u03b2) induced... Neuro-protective effects of aloperine in an Al... 4-hydroxy-2-nonenal (4-HNE) 135 Lipid Peroxidation Products Aldehydes 4-hydroxy-2-nonenal D02.047 C9H16O2 4-HNE, MDA Cross-Linking Reagents D27.720.470.410.210 None # Saving file to import area of local neo4j instance chem_list_occurance_file = '/Users/akre96/Library/Application Support/Neo4j Desktop/Application/neo4jDatabases/database-dc2bbd3b-84e9-421e-8594-9fe29be9bb02/installation-3.5.6/import/chem_list_occurance.csv' chem_list_occurance_df.to_csv(chem_list_occurance_file, index=False)","title":"Merging Chemical List with Chemical Occurance Data Sets"},{"location":"implementation/Create_Drug_Cooccurance_Graph/#adding-to-neo4j-graph-database-for-chemical-occurance-in-pmids","text":"Query formed to import data from list generated in previous section of this notebook Loading csv Creating chemical entities with name, example, and formula fields Merges article entities with PMID, abstract, title, and MeSH fields Creating edges labeled OCCURANCE for connecting drugs referenced by a PMID import_chemical_data_query = ( LOAD CSV WITH HEADERS FROM %s AS row MERGE (chem:Chemical {name: row.chemical, example: row.Examples, formula: row.formula}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, %s)}) MERGE (mesh:MeSH {name: row.chemical_mesh}) MERGE (chem)-[:OCCURANCE]- (article) MERGE (chem)-[:HAS_MESH]- (mesh) % (' file:///' + 'chem_list_occurance.csv' + ' ', ', ' ) ) print('Query:\\n\\t', import_chemical_data_query) with driver.driver.session() as session: result = session.run(import_chemical_data_query) Query: LOAD CSV WITH HEADERS FROM file:///chem_list_occurance.csv AS row MERGE (chem:Chemical {name: row.chemical, example: row.Examples, formula: row.formula}) MERGE (article:Article {PMID: row.PMID, abstract: row.abstract, title: row.title, MeSH: split(row.MeSH, ', ')}) MERGE (mesh:MeSH {name: row.chemical_mesh}) MERGE (chem)-[:OCCURANCE]- (article) MERGE (chem)-[:HAS_MESH]- (mesh)","title":"Adding to Neo4J Graph Database for Chemical occurance in PMIDs"},{"location":"implementation/Create_Drug_Cooccurance_Graph/#adding-mesh-descriptors-from-articles-as-mesh-node","text":"Adds nodes from mesh descriptor list Deletes \"none\" node article_mesh_descriptors_query = ( MATCH (article:Article) UNWIND article.MeSH AS m MERGE (artMesh:MeSH {name: m}) MERGE (article)-[:HAS_MESH]- (artMesh) ) print('Query:\\n\\t', article_mesh_descriptors_query) with driver.driver.session() as session: result = session.run(article_mesh_descriptors_query) Query: MATCH (article:Article) UNWIND article.MeSH AS m MERGE (artMesh:MeSH {name: m}) MERGE (article)-[:HAS_MESH]- (artMesh) delete_none_mesh_descriptors_query = ( MATCH (m:MeSH {name: 'None'}) DETACH DELETE m ) print('Query:\\n\\t', delete_none_mesh_descriptors_query) with driver.driver.session() as session: result = session.run(delete_none_mesh_descriptors_query) Query: MATCH (m:MeSH {name: 'None'}) DETACH DELETE m","title":"Adding MeSH descriptors from Articles as MeSH node"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/","text":"Drug/Chemical Reactome Pathways Samir Akre - October 2019 import neo4j_functions.driver as neo4j_driver import pandas as pd import importlib import progressbar import seaborn as sns import matplotlib.pyplot as plt Importing curated lists of drugs and chemicals chemical_list_df = pd.read_csv('lib/Oxidative Stress Text Mining Targets 4.1 - Summary of Oxidative Stress.csv') drug_list_df = pd.read_csv('lib/Drug list total 04.05.19 - Overview Drug list.csv') chemical_list_df.head(n=2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Biological Events of Oxidative Stress Molecular and Functional Categories Molecule/Enzyme/Protein MeSH Heading MeSH Supplementary MeSH tree numbers Chemical Formula Examples Pharm Actions Tree Numbers References 0 Initiation of Oxidative 1 Reactive Oxygen Species (ROS) Superoxide (anion radical) Superoxides NaN D01.248.497.158.685.750.850; D01.339.431.374.8... O2- Superoxide, Hydrogen Peroxide Oxidants D27.720.642,\\nD27.888.569.540 PMID: 25547488 1 2 NaN Hydrogen Peroxide Hydrogen Peroxide NaN D01.248.497.158.685.750.424; D01.339.431.374.4... H2O2 NaN Anti-Infective Agents, Local D27.505.954.122.187 NaN drug_list_df.head(n=2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Drug Category # Name Synonyms MeSH Descriptor MeSH tree(s) Common adverse effects Dosage (freq/amount/time/delivery) Duration (time) Pham Action 0 Anticoagulants 1 heparin ['Calciparine', 'Eparina', 'heparina', 'Hepari... heparin D09.698.373.400 Thrombocytopenia, Cerebral haemorrhage, Haemog... 1/18U/kg/iv 2 days Anticoagulants, \\nFibrinolytic Agents 1 NaN 2 warfarin ['4-Hydroxy-3-(3-oxo-1-phenylbutyl)coumarin', ... warfarin D03.383.663.283.446.520.914\\nD03.633.100.150.4... Haemorrhage, Haematoma, anaemia, Epistaxis, hy... 1/2-10mg/day/po As needed Anticoagulants, \\nRodenticides Looking for reactome ids of drugs in curated list Looks for the lower case name of the drug from the curated list to match any of the lowercase names a drug in reactome is listed in. Outputs pandas data frame under variable drugs_in_reactome 58/155 drugs found to have counter parts in reactome importlib.reload(neo4j_driver) driver = neo4j_driver.driver(uri = bolt://localhost:7687 , user = neo4j , password = Akre1234 ) Test to see if I can find any drug in the reactome data set driver.search_item_in_array( array_field= name , item=' herceptin ', class_type='Drug', info_cols = ['displayName', 'stId', 'isInDisease'], verbose=True ) Query: MATCH (a:Drug) WHERE toLower( herceptin ) IN [x in a.name | toLower(x)] RETURN a.displayName, a.stId, a.isInDisease .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName stId isInDisease 0 trastuzumab [extracellular region] R-ALL-9634466 True Querying to find reactome ID for each drug in curated list drugs_in_reactome = pd.DataFrame() for drug_name in drug_list_df.Name.unique(): result = driver.search_item_in_array( array_field= name , item=' %s ' % drug_name, class_type='Drug', info_cols = ['displayName', 'stId', 'isInDisease'] ) result['Name'] = drug_name drugs_in_reactome = drugs_in_reactome.append(result) drugs_in_reactome.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName stId isInDisease Name 0 warfarin [cytosol] R-ALL-9014945 True warfarin 0 dabigatran [extracellular region] R-ALL-9015346 True dabigatran 0 rivaroxaban [extracellular region] R-ALL-9015055 True rivaroxaban 0 apixaban [extracellular region] R-ALL-9038732 True apixaban 0 edoxaban [extracellular region] R-ALL-9038742 True edoxaban print('Initial Drug List Size: ', drug_list_df.Name.nunique()) print('Drugs found in Reacome: ', drugs_in_reactome.Name.nunique()) Initial Drug List Size: 155 Drugs found in Reacome: 58 Looking for pathways associated with each drug found in the Reactome database Looks for 25 \"nearest\" pathways marked as Pathways to any drug within 1-3 nodes Outputs to pathways variable as a pandas dataframe # Re-initializing driver to account for changes made to driver function importlib.reload(neo4j_driver) driver = neo4j_driver.driver(uri = bolt://localhost:7687 , user = neo4j , password = Akre1234 ) # For each reactome drug ID, looks for 100 closest pathways within 1-2 nodes pathways = pd.DataFrame() for reactome_id, d_df, in progressbar.progressbar(drugs_in_reactome.groupby('stId')): result = driver.get_n_relations( class_1='Drug', id_1= '%s' % reactome_id, id_class='stId', # class_2='TopLevelPathway', class_2='Pathway', info_cols=['a.displayName', 'b.displayName', 'b.speciesName'], edge_type='*1..2', where_clause= WHERE b.speciesName = 'Homo sapiens' , verbose=False, n=10000, ).rename(columns={ 'a.displayName': 'Drug', 'b.displayName': 'Pathway', 'b.speciesName': 'Species' }) pathways = pathways.append(result, ignore_index=True, sort=False) pathways.head() 100% (58 of 58) |########################| Elapsed Time: 0:00:15 Time: 0:00:15 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Drug Pathway Species edgeLength 0 warfarin [cytosol] Chaperone Mediated Autophagy Homo sapiens 2.0 1 warfarin [cytosol] Pink/Parkin Mediated Mitophagy Homo sapiens 2.0 2 warfarin [cytosol] Receptor Mediated Mitophagy Homo sapiens 2.0 3 warfarin [cytosol] Microautophagy Homo sapiens 2.0 4 warfarin [cytosol] Amplification of signal from unattached kine... Homo sapiens 2.0 pathways['drug'] = pathways['Drug'].str.split(' ').str.get(0) # Number of drugs per pathway, seperated by edgelength drugs_per_pathway = pd.DataFrame(pathways.groupby(['Pathway', 'edgeLength']).drug.nunique()).reset_index().sort_values(by=['edgeLength', 'drug'], ascending=[True, False]) # Number of pathways per drug, seperated by edgeLength pathways_per_drug = pd.DataFrame(pathways.groupby(['drug', 'edgeLength']).Pathway.nunique()).reset_index().sort_values(by=['edgeLength', 'Pathway'], ascending=[True, False]) # Plotting top 15 and bottom 10 drugs sns.set_context('talk', font_scale=1.5) fig, ax = plt.subplots(figsize=(8, 12)) sns.countplot( y='drug', order=pd.concat([pathways_per_drug.head(15), pathways_per_drug.tail(10)]).drug, data=pathways, ax=ax ) ax.set_xlabel('Number of Pathways') ax.set_ylabel('') ax.set_title('Drugs') sns.despine() # Plotting top 15 and bottom 10 pathways sns.set_context('talk', font_scale=1.5) fig, ax = plt.subplots(figsize=(8, 12)) sns.countplot( y='Pathway', order=pd.concat([drugs_per_pathway.head(15), drugs_per_pathway.tail(10)]).Pathway, data=pathways, ax=ax ) ax.set_xlabel('Number of Drugs') ax.set_ylabel('') ax.set_title('Pathways') sns.despine() Test Cypher Queries in custom neo4j driver implementation driver.get_node_info( id_field= stId , id_val= R-ALL-9634956 , class_type='Drug', info_cols = ['displayName', 'name', 'isInDisease'] ) Query: MATCH (a:Drug {stId: $idnum}) RETURN a.displayName, a.name, a.isInDisease pyridostigmine [extracellular region] ['pyridostigmine'] True .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName name isInDisease 0 pyridostigmine [extracellular region] [pyridostigmine] True driver.get_n_nodes_info( class_type='Drug', info_cols = ['displayName', 'name', 'isInDisease'], n=10 ) Query: MATCH (a:Drug) RETURN a.displayName, a.name, a.isInDisease LIMIT 10 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName name isInDisease 0 trastuzumab [extracellular region] [trastuzumab, herceptin, D5v8, R-597] True 0 CP-724714 [cytosol] [CP-724714] True 0 Afatinib [cytosol] [Afatinib, BIBW2992, Irreversible TKI inhibito... True 0 AZ5104 [cytosol] [AZ5104] True 0 Sapitinib [cytosol] [Sapitinib] True 0 Tesevatinib [cytosol] [Tesevatinib, EXEL-7647, XL-647, KD-019, XL647] True 0 Lapatinib [cytosol] [Lapatinib, GW572016, Tykerb, Reversible tyros... True 0 Neratinib [cytosol] [Neratinib, HKI-272, afatinib, Irreversible ty... True 0 AEE788 [cytosol] [AEE788] True 0 Canertinib [cytosol] [Canertinib, CI-1033, Irreversible TKI inhibit... True","title":"Finding Common Pathways Used by Drugs"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#drugchemical-reactome-pathways","text":"Samir Akre - October 2019 import neo4j_functions.driver as neo4j_driver import pandas as pd import importlib import progressbar import seaborn as sns import matplotlib.pyplot as plt","title":"Drug/Chemical Reactome Pathways"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#importing-curated-lists-of-drugs-and-chemicals","text":"chemical_list_df = pd.read_csv('lib/Oxidative Stress Text Mining Targets 4.1 - Summary of Oxidative Stress.csv') drug_list_df = pd.read_csv('lib/Drug list total 04.05.19 - Overview Drug list.csv') chemical_list_df.head(n=2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Biological Events of Oxidative Stress Molecular and Functional Categories Molecule/Enzyme/Protein MeSH Heading MeSH Supplementary MeSH tree numbers Chemical Formula Examples Pharm Actions Tree Numbers References 0 Initiation of Oxidative 1 Reactive Oxygen Species (ROS) Superoxide (anion radical) Superoxides NaN D01.248.497.158.685.750.850; D01.339.431.374.8... O2- Superoxide, Hydrogen Peroxide Oxidants D27.720.642,\\nD27.888.569.540 PMID: 25547488 1 2 NaN Hydrogen Peroxide Hydrogen Peroxide NaN D01.248.497.158.685.750.424; D01.339.431.374.4... H2O2 NaN Anti-Infective Agents, Local D27.505.954.122.187 NaN drug_list_df.head(n=2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Drug Category # Name Synonyms MeSH Descriptor MeSH tree(s) Common adverse effects Dosage (freq/amount/time/delivery) Duration (time) Pham Action 0 Anticoagulants 1 heparin ['Calciparine', 'Eparina', 'heparina', 'Hepari... heparin D09.698.373.400 Thrombocytopenia, Cerebral haemorrhage, Haemog... 1/18U/kg/iv 2 days Anticoagulants, \\nFibrinolytic Agents 1 NaN 2 warfarin ['4-Hydroxy-3-(3-oxo-1-phenylbutyl)coumarin', ... warfarin D03.383.663.283.446.520.914\\nD03.633.100.150.4... Haemorrhage, Haematoma, anaemia, Epistaxis, hy... 1/2-10mg/day/po As needed Anticoagulants, \\nRodenticides","title":"Importing curated lists of drugs and chemicals"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#looking-for-reactome-ids-of-drugs-in-curated-list","text":"Looks for the lower case name of the drug from the curated list to match any of the lowercase names a drug in reactome is listed in. Outputs pandas data frame under variable drugs_in_reactome 58/155 drugs found to have counter parts in reactome importlib.reload(neo4j_driver) driver = neo4j_driver.driver(uri = bolt://localhost:7687 , user = neo4j , password = Akre1234 )","title":"Looking for reactome ids of drugs in curated list"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#test-to-see-if-i-can-find-any-drug-in-the-reactome-data-set","text":"driver.search_item_in_array( array_field= name , item=' herceptin ', class_type='Drug', info_cols = ['displayName', 'stId', 'isInDisease'], verbose=True ) Query: MATCH (a:Drug) WHERE toLower( herceptin ) IN [x in a.name | toLower(x)] RETURN a.displayName, a.stId, a.isInDisease .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName stId isInDisease 0 trastuzumab [extracellular region] R-ALL-9634466 True","title":"Test to see if I can find any drug in the reactome data set"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#querying-to-find-reactome-id-for-each-drug-in-curated-list","text":"drugs_in_reactome = pd.DataFrame() for drug_name in drug_list_df.Name.unique(): result = driver.search_item_in_array( array_field= name , item=' %s ' % drug_name, class_type='Drug', info_cols = ['displayName', 'stId', 'isInDisease'] ) result['Name'] = drug_name drugs_in_reactome = drugs_in_reactome.append(result) drugs_in_reactome.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName stId isInDisease Name 0 warfarin [cytosol] R-ALL-9014945 True warfarin 0 dabigatran [extracellular region] R-ALL-9015346 True dabigatran 0 rivaroxaban [extracellular region] R-ALL-9015055 True rivaroxaban 0 apixaban [extracellular region] R-ALL-9038732 True apixaban 0 edoxaban [extracellular region] R-ALL-9038742 True edoxaban print('Initial Drug List Size: ', drug_list_df.Name.nunique()) print('Drugs found in Reacome: ', drugs_in_reactome.Name.nunique()) Initial Drug List Size: 155 Drugs found in Reacome: 58","title":"Querying to find reactome ID for each drug in curated list"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#looking-for-pathways-associated-with-each-drug-found-in-the-reactome-database","text":"Looks for 25 \"nearest\" pathways marked as Pathways to any drug within 1-3 nodes Outputs to pathways variable as a pandas dataframe # Re-initializing driver to account for changes made to driver function importlib.reload(neo4j_driver) driver = neo4j_driver.driver(uri = bolt://localhost:7687 , user = neo4j , password = Akre1234 ) # For each reactome drug ID, looks for 100 closest pathways within 1-2 nodes pathways = pd.DataFrame() for reactome_id, d_df, in progressbar.progressbar(drugs_in_reactome.groupby('stId')): result = driver.get_n_relations( class_1='Drug', id_1= '%s' % reactome_id, id_class='stId', # class_2='TopLevelPathway', class_2='Pathway', info_cols=['a.displayName', 'b.displayName', 'b.speciesName'], edge_type='*1..2', where_clause= WHERE b.speciesName = 'Homo sapiens' , verbose=False, n=10000, ).rename(columns={ 'a.displayName': 'Drug', 'b.displayName': 'Pathway', 'b.speciesName': 'Species' }) pathways = pathways.append(result, ignore_index=True, sort=False) pathways.head() 100% (58 of 58) |########################| Elapsed Time: 0:00:15 Time: 0:00:15 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Drug Pathway Species edgeLength 0 warfarin [cytosol] Chaperone Mediated Autophagy Homo sapiens 2.0 1 warfarin [cytosol] Pink/Parkin Mediated Mitophagy Homo sapiens 2.0 2 warfarin [cytosol] Receptor Mediated Mitophagy Homo sapiens 2.0 3 warfarin [cytosol] Microautophagy Homo sapiens 2.0 4 warfarin [cytosol] Amplification of signal from unattached kine... Homo sapiens 2.0 pathways['drug'] = pathways['Drug'].str.split(' ').str.get(0) # Number of drugs per pathway, seperated by edgelength drugs_per_pathway = pd.DataFrame(pathways.groupby(['Pathway', 'edgeLength']).drug.nunique()).reset_index().sort_values(by=['edgeLength', 'drug'], ascending=[True, False]) # Number of pathways per drug, seperated by edgeLength pathways_per_drug = pd.DataFrame(pathways.groupby(['drug', 'edgeLength']).Pathway.nunique()).reset_index().sort_values(by=['edgeLength', 'Pathway'], ascending=[True, False]) # Plotting top 15 and bottom 10 drugs sns.set_context('talk', font_scale=1.5) fig, ax = plt.subplots(figsize=(8, 12)) sns.countplot( y='drug', order=pd.concat([pathways_per_drug.head(15), pathways_per_drug.tail(10)]).drug, data=pathways, ax=ax ) ax.set_xlabel('Number of Pathways') ax.set_ylabel('') ax.set_title('Drugs') sns.despine() # Plotting top 15 and bottom 10 pathways sns.set_context('talk', font_scale=1.5) fig, ax = plt.subplots(figsize=(8, 12)) sns.countplot( y='Pathway', order=pd.concat([drugs_per_pathway.head(15), drugs_per_pathway.tail(10)]).Pathway, data=pathways, ax=ax ) ax.set_xlabel('Number of Drugs') ax.set_ylabel('') ax.set_title('Pathways') sns.despine()","title":"Looking for pathways associated with each drug found in the Reactome database"},{"location":"implementation/Explore_Drug_chemical_OxStress/Explore_Drug_chemical_OxStress/#test-cypher-queries-in-custom-neo4j-driver-implementation","text":"driver.get_node_info( id_field= stId , id_val= R-ALL-9634956 , class_type='Drug', info_cols = ['displayName', 'name', 'isInDisease'] ) Query: MATCH (a:Drug {stId: $idnum}) RETURN a.displayName, a.name, a.isInDisease pyridostigmine [extracellular region] ['pyridostigmine'] True .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName name isInDisease 0 pyridostigmine [extracellular region] [pyridostigmine] True driver.get_n_nodes_info( class_type='Drug', info_cols = ['displayName', 'name', 'isInDisease'], n=10 ) Query: MATCH (a:Drug) RETURN a.displayName, a.name, a.isInDisease LIMIT 10 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } displayName name isInDisease 0 trastuzumab [extracellular region] [trastuzumab, herceptin, D5v8, R-597] True 0 CP-724714 [cytosol] [CP-724714] True 0 Afatinib [cytosol] [Afatinib, BIBW2992, Irreversible TKI inhibito... True 0 AZ5104 [cytosol] [AZ5104] True 0 Sapitinib [cytosol] [Sapitinib] True 0 Tesevatinib [cytosol] [Tesevatinib, EXEL-7647, XL-647, KD-019, XL647] True 0 Lapatinib [cytosol] [Lapatinib, GW572016, Tykerb, Reversible tyros... True 0 Neratinib [cytosol] [Neratinib, HKI-272, afatinib, Irreversible ty... True 0 AEE788 [cytosol] [AEE788] True 0 Canertinib [cytosol] [Canertinib, CI-1033, Irreversible TKI inhibit... True","title":"Test Cypher Queries in custom neo4j driver implementation"},{"location":"implementation/chemical_drug_elastic_occurance/chemical_drug_elastic_occurance/","text":"Finding Occurrences of Chemicals and Drugs in PubMed Abstracts Searches the ElasticSearch index created during CaseOLAP pipeline run for curated list of Drugs and Chemicals related to oxidative stress Output: Chemical_PMID_occurances.csv : CSV table where each row is the occurance of a chemical in PubMed Drug_PMID_occurances.csv : CSV table where each row is the occurance of a drug in PubMed from elasticsearch import Elasticsearch from elasticsearch_dsl import Search, Q import pandas as pd from itertools import product import seaborn as sns Load Drug and Chemical lists, initialize Elastic Search Requires elastic search engine to be running on cluster. Must have PMID index chemical_list_df = pd.read_csv('Oxidative Stress Text Mining Targets 4.1 - Summary of Oxidative Stress.csv') chemical_list_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Biological Events of Oxidative Stress Molecular and Functional Categories Molecule/Enzyme/Protein MeSH Heading MeSH Supplementary MeSH tree numbers Chemical Formula Examples Pharm Actions Tree Numbers References 0 Initiation of Oxidative 1 Reactive Oxygen Species (ROS) Superoxide (anion radical) Superoxides NaN D01.248.497.158.685.750.850; D01.339.431.374.8... O2- Superoxide, Hydrogen Peroxide Oxidants D27.720.642,\\nD27.888.569.540 PMID: 25547488 1 2 NaN Hydrogen Peroxide Hydrogen Peroxide NaN D01.248.497.158.685.750.424; D01.339.431.374.4... H2O2 NaN Anti-Infective Agents, Local D27.505.954.122.187 NaN 2 NaN NaN NaN NaN NaN NaN NaN NaN Oxidants D27.720.642,\\nD27.888.569.540 NaN 3 3 NaN Hydroxyl (radical) Hydroxyl Radical NaN D01.339.431.249; D01.248.497.158.459.300; D01.... HO NaN Oxidants D27.720.642,\\nD27.888.569.540 NaN 4 4 NaN alpha oxygen None listed NaN NaN NaN NaN NaN NaN NaN drug_list_df = pd.read_csv('Drug list total 04.05.19 - Overview Drug list.csv') drug_list_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Drug Category # Name Synonyms MeSH Descriptor MeSH tree(s) Common adverse effects Dosage (freq/amount/time/delivery) Duration (time) Pham Action 0 Anticoagulants 1 heparin ['Calciparine', 'Eparina', 'heparina', 'Hepari... heparin D09.698.373.400 Thrombocytopenia, Cerebral haemorrhage, Haemog... 1/18U/kg/iv 2 days Anticoagulants, \\nFibrinolytic Agents 1 NaN 2 warfarin ['4-Hydroxy-3-(3-oxo-1-phenylbutyl)coumarin', ... warfarin D03.383.663.283.446.520.914\\nD03.633.100.150.4... Haemorrhage, Haematoma, anaemia, Epistaxis, hy... 1/2-10mg/day/po As needed Anticoagulants, \\nRodenticides 2 Thrombolytics 3 streptokinase ['Streptokinase C precursor'] streptokinase D08.811.277.656.300.775\\nD12.776.124.125.662.537 blurred vision, confusion, dizziness, fever, s... 1/1,500,000 IU/iv 60min Fibrinolytic Agents 3 NaN 4 urokinase ['U-plasminogen activator', 'uPA', 'Urokinase-... Urokinase-Type Plasminogen Activator D08.811.277.656.300.760.910\\nD08.811.277.656.9... bleeding gums, coughing up blood, dizziness, h... 1/4,000,000U/iv 10min NaN 4 NaN 5 tpa ['Alteplasa', 'Alteplase (genetical recombinat... Tissue Plasminogen Activator D08.811.277.656.300.760.875\\nD08.811.277.656.9... NaN 1/0.9mg/kg/iv 60min Fibrinolytic Agents es = Elasticsearch() Find PMIDs associated with every combination of drugs and chemicals via elastic search # All combinations of drugs and chemicals drug_chemicals = product( drug_list_df['Name'].dropna().unique(), chemical_list_df['Molecule/Enzyme/Protein'].dropna().unique() ) matches = pd.DataFrame() for (drug, chemical) in drug_chemicals: mol_matches = { 'PMID': [], 'title': [], } # Match drug and chemical q = Q( match_phrase , abstract=drug) Q( match_phrase , abstract=chemical) # Search hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query(q) for h in hits: mol_matches['PMID'].append(h.pmid) mol_matches['title'].append(h.title) match_df = pd.DataFrame.from_dict(mol_matches) match_df['drug'] = drug match_df['chemical'] = chemical matches = matches.append(match_df) matches.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } PMID title drug chemical 0 9655178 Association of myeloperoxidase with heparin: o... heparin Hydrogen Peroxide 1 10187813 Oxidation of methionine residues in antithromb... heparin Hydrogen Peroxide 2 30879129 Heparin prevents oxidative stress-induced apop... heparin Hydrogen Peroxide 3 8181006 Evidence of a selective free radical degradati... heparin Hydrogen Peroxide 4 1321628 Heparin: does it act as an antioxidant in vivo? heparin Hydrogen Peroxide article_count = pd.DataFrame( matches.groupby(['drug', 'chemical']).PMID.nunique() ).reset_index().rename(columns={'PMID': 'Article Count'}) piv_count = article_count.pivot_table( index='chemical', columns='drug', values='Article Count', fill_value=0 ) sns.clustermap( piv_count, figsize=(22,13), cmap='viridis' ) seaborn.matrix.ClusterGrid at 0x7fe7382b6588 Find PMIDS assocaited with drugs and chemicals via elastic search drug_matches = pd.DataFrame() for drug, m_df in drug_list_df.groupby('Name'): drug_match = { 'PMID': [], 'title': [], 'abstract': [], 'MeSH': [] } hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query( match_phrase , abstract=drug, ) for h in hits: drug_match['PMID'].append(h.pmid) drug_match['title'].append(h.title) drug_match['abstract'].append(h.abstract) drug_match['MeSH'].append(h.MeSH) drug_match_df = pd.DataFrame.from_dict(drug_match) drug_match_df['drug'] = drug drug_matches = drug_matches.append(drug_match_df) drug_matches.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title drug 0 [Actinomycetales, chemistry, enzymology, Adeno... 8784428 a phosphotransferase which modifies the alpha ... Acarbose 7-phosphotransferase from Actinoplane... Acarbose 1 [Acarbose, Adult, Blood Glucose, metabolism, C... 6350115 in a double blind study we have compared the e... Effect of acarbose, pectin, a combination of a... Acarbose 2 [Acarbose, Adult, Aged, Blood Glucose, metabol... 9663365 acarbose is an alpha glucosidase inhibitor app... Effects of beano on the tolerability and pharm... Acarbose 3 [Acarbose, administration dosage, Animals, B... 11779583 as alpha glucosidase inhibitor, the antidiabet... Chronic acarbose-feeding increases GLUT1 prote... Acarbose 4 [Acarbose, Aged, Blood Glucose, metabolism, Di... 9428831 to compare the therapeutic potential of acarbo... Efficacy of 24-week monotherapy with acarbose,... Acarbose drug_matches.to_csv('Drug_PMID_occurances.csv', index=False) chem_matches = pd.DataFrame() for chemical, m_df in chemical_list_df.groupby('Molecule/Enzyme/Protein'): chem_match = { 'PMID': [], 'title': [], 'abstract': [], 'MeSH': [] } hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query( match_phrase , abstract=chemical, ) for h in hits: chem_match['PMID'].append(h.pmid) chem_match['title'].append(h.title) chem_match['abstract'].append(h.abstract) chem_match['MeSH'].append(h.MeSH) chem_match_df = pd.DataFrame.from_dict(chem_match) chem_match_df['chemical'] = chemical chem_matches = chem_matches.append(chem_match_df) chem_matches.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title chemical 0 [] 31368101 coronary spasm plays an important role in the ... Association of East Asian Variant Aldehyde Deh... 4-hydroxy-2-nonenal (4-HNE) 1 [Acetylcholinesterase, metabolism, Aldehydes, ... 10463393 we have investigated the effect of soman induc... Increased levels of nitrogen oxides and lipid ... 4-hydroxy-2-nonenal (4-HNE) 2 [Aldehydes, chemistry, Amines, chemistry, Benz... 8448343 the reaction of trans 4 hydroxy 2 nonenal (4 h... Pyrrole formation from 4-hydroxynonenal and pr... 4-hydroxy-2-nonenal (4-HNE) 3 [Animals, Blood-Brain Barrier, metabolism, pat... 29775963 brain ischemic preconditioning (ipc) with mild... Brain ischemic preconditioning protects agains... 4-hydroxy-2-nonenal (4-HNE) 4 [Alzheimer Disease, drug therapy, enzymology, ... 30218858 excessive production of amyloid \u03b2 (a\u03b2) induced... Neuro-protective effects of aloperine in an Al... 4-hydroxy-2-nonenal (4-HNE) chem_matches.to_csv('Chemical_PMID_occurances.csv', index=False) chem_matches.merge(drug_matches[['PMID', 'drug']]) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title chemical drug 0 [Anaphylaxis, metabolism, physiopathology, Ani... 8576313 nitric oxide, synthesized from the guanidino g... Role of nitric oxide in anaphylactic shock. Nitric oxide nitric oxide 1 [Animals, Blotting, Western, Denervation, Immu... 10391455 nitric oxide may be liberated as an inflammato... Evidence for nitric oxide and nitric oxide syn... Nitric oxide nitric oxide 2 [Administration, Inhalation, Adult, Aged, Atri... 15891329 to compare hemodynamic and gasometric variable... Lack of alteration of endogenous nitric oxide ... Nitric oxide nitric oxide 3 [Administration, Inhalation, Coronary Artery B... 8614135 increased pulmonary vascular resistance may gr... Effective control of pulmonary vascular resist... Nitric oxide nitric oxide 4 [1-Methyl-3-isobutylxanthine, pharmacology, An... 9722153 the structures capable of synthesizing cyclic ... Distribution of nitric oxide synthase and nitr... Nitric oxide nitric oxide 5 [Amino Acid Oxidoreductases, metabolism, Anima... 7543936 in the myenteric plexus of the guinea pig ileu... Analysis of connections between nitric oxide s... Nitric oxide nitric oxide 6 [Animals, Humans, Hypertension, metabolism, ph... 9914862 nitric oxide is hypothesized to be an inhibito... Neural mechanisms in nitric-oxide-deficient hy... Nitric oxide nitric oxide 7 [Amino Acid Oxidoreductases, biosynthesis, Ani... 7532824 nitric oxide is produced in the cns by both co... Modulation of inducible nitric oxide synthase ... Nitric oxide nitric oxide 8 [Administration, Inhalation, Animals, Drug Adm... 12594148 pulsed administration of nitric oxide has prov... Administration of nitric oxide into open lung ... Nitric oxide nitric oxide 9 [Adult, Female, Humans, Luminescent Measuremen... 10367927 nasal nitric oxide is present in high concentr... Nitric oxide accumulation in the nonventilated... Nitric oxide nitric oxide","title":"Querying ElasticSearch for Drug/Chemical Occurrence"},{"location":"implementation/chemical_drug_elastic_occurance/chemical_drug_elastic_occurance/#finding-occurrences-of-chemicals-and-drugs-in-pubmed-abstracts","text":"Searches the ElasticSearch index created during CaseOLAP pipeline run for curated list of Drugs and Chemicals related to oxidative stress","title":"Finding Occurrences of Chemicals and Drugs in PubMed Abstracts"},{"location":"implementation/chemical_drug_elastic_occurance/chemical_drug_elastic_occurance/#output","text":"Chemical_PMID_occurances.csv : CSV table where each row is the occurance of a chemical in PubMed Drug_PMID_occurances.csv : CSV table where each row is the occurance of a drug in PubMed from elasticsearch import Elasticsearch from elasticsearch_dsl import Search, Q import pandas as pd from itertools import product import seaborn as sns","title":"Output:"},{"location":"implementation/chemical_drug_elastic_occurance/chemical_drug_elastic_occurance/#load-drug-and-chemical-lists-initialize-elastic-search","text":"Requires elastic search engine to be running on cluster. Must have PMID index chemical_list_df = pd.read_csv('Oxidative Stress Text Mining Targets 4.1 - Summary of Oxidative Stress.csv') chemical_list_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Biological Events of Oxidative Stress Molecular and Functional Categories Molecule/Enzyme/Protein MeSH Heading MeSH Supplementary MeSH tree numbers Chemical Formula Examples Pharm Actions Tree Numbers References 0 Initiation of Oxidative 1 Reactive Oxygen Species (ROS) Superoxide (anion radical) Superoxides NaN D01.248.497.158.685.750.850; D01.339.431.374.8... O2- Superoxide, Hydrogen Peroxide Oxidants D27.720.642,\\nD27.888.569.540 PMID: 25547488 1 2 NaN Hydrogen Peroxide Hydrogen Peroxide NaN D01.248.497.158.685.750.424; D01.339.431.374.4... H2O2 NaN Anti-Infective Agents, Local D27.505.954.122.187 NaN 2 NaN NaN NaN NaN NaN NaN NaN NaN Oxidants D27.720.642,\\nD27.888.569.540 NaN 3 3 NaN Hydroxyl (radical) Hydroxyl Radical NaN D01.339.431.249; D01.248.497.158.459.300; D01.... HO NaN Oxidants D27.720.642,\\nD27.888.569.540 NaN 4 4 NaN alpha oxygen None listed NaN NaN NaN NaN NaN NaN NaN drug_list_df = pd.read_csv('Drug list total 04.05.19 - Overview Drug list.csv') drug_list_df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Drug Category # Name Synonyms MeSH Descriptor MeSH tree(s) Common adverse effects Dosage (freq/amount/time/delivery) Duration (time) Pham Action 0 Anticoagulants 1 heparin ['Calciparine', 'Eparina', 'heparina', 'Hepari... heparin D09.698.373.400 Thrombocytopenia, Cerebral haemorrhage, Haemog... 1/18U/kg/iv 2 days Anticoagulants, \\nFibrinolytic Agents 1 NaN 2 warfarin ['4-Hydroxy-3-(3-oxo-1-phenylbutyl)coumarin', ... warfarin D03.383.663.283.446.520.914\\nD03.633.100.150.4... Haemorrhage, Haematoma, anaemia, Epistaxis, hy... 1/2-10mg/day/po As needed Anticoagulants, \\nRodenticides 2 Thrombolytics 3 streptokinase ['Streptokinase C precursor'] streptokinase D08.811.277.656.300.775\\nD12.776.124.125.662.537 blurred vision, confusion, dizziness, fever, s... 1/1,500,000 IU/iv 60min Fibrinolytic Agents 3 NaN 4 urokinase ['U-plasminogen activator', 'uPA', 'Urokinase-... Urokinase-Type Plasminogen Activator D08.811.277.656.300.760.910\\nD08.811.277.656.9... bleeding gums, coughing up blood, dizziness, h... 1/4,000,000U/iv 10min NaN 4 NaN 5 tpa ['Alteplasa', 'Alteplase (genetical recombinat... Tissue Plasminogen Activator D08.811.277.656.300.760.875\\nD08.811.277.656.9... NaN 1/0.9mg/kg/iv 60min Fibrinolytic Agents es = Elasticsearch()","title":"Load Drug and Chemical lists, initialize Elastic Search"},{"location":"implementation/chemical_drug_elastic_occurance/chemical_drug_elastic_occurance/#find-pmids-associated-with-every-combination-of-drugs-and-chemicals-via-elastic-search","text":"# All combinations of drugs and chemicals drug_chemicals = product( drug_list_df['Name'].dropna().unique(), chemical_list_df['Molecule/Enzyme/Protein'].dropna().unique() ) matches = pd.DataFrame() for (drug, chemical) in drug_chemicals: mol_matches = { 'PMID': [], 'title': [], } # Match drug and chemical q = Q( match_phrase , abstract=drug) Q( match_phrase , abstract=chemical) # Search hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query(q) for h in hits: mol_matches['PMID'].append(h.pmid) mol_matches['title'].append(h.title) match_df = pd.DataFrame.from_dict(mol_matches) match_df['drug'] = drug match_df['chemical'] = chemical matches = matches.append(match_df) matches.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } PMID title drug chemical 0 9655178 Association of myeloperoxidase with heparin: o... heparin Hydrogen Peroxide 1 10187813 Oxidation of methionine residues in antithromb... heparin Hydrogen Peroxide 2 30879129 Heparin prevents oxidative stress-induced apop... heparin Hydrogen Peroxide 3 8181006 Evidence of a selective free radical degradati... heparin Hydrogen Peroxide 4 1321628 Heparin: does it act as an antioxidant in vivo? heparin Hydrogen Peroxide article_count = pd.DataFrame( matches.groupby(['drug', 'chemical']).PMID.nunique() ).reset_index().rename(columns={'PMID': 'Article Count'}) piv_count = article_count.pivot_table( index='chemical', columns='drug', values='Article Count', fill_value=0 ) sns.clustermap( piv_count, figsize=(22,13), cmap='viridis' ) seaborn.matrix.ClusterGrid at 0x7fe7382b6588","title":"Find PMIDs associated with every combination of drugs and chemicals via elastic search"},{"location":"implementation/chemical_drug_elastic_occurance/chemical_drug_elastic_occurance/#find-pmids-assocaited-with-drugs-and-chemicals-via-elastic-search","text":"drug_matches = pd.DataFrame() for drug, m_df in drug_list_df.groupby('Name'): drug_match = { 'PMID': [], 'title': [], 'abstract': [], 'MeSH': [] } hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query( match_phrase , abstract=drug, ) for h in hits: drug_match['PMID'].append(h.pmid) drug_match['title'].append(h.title) drug_match['abstract'].append(h.abstract) drug_match['MeSH'].append(h.MeSH) drug_match_df = pd.DataFrame.from_dict(drug_match) drug_match_df['drug'] = drug drug_matches = drug_matches.append(drug_match_df) drug_matches.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title drug 0 [Actinomycetales, chemistry, enzymology, Adeno... 8784428 a phosphotransferase which modifies the alpha ... Acarbose 7-phosphotransferase from Actinoplane... Acarbose 1 [Acarbose, Adult, Blood Glucose, metabolism, C... 6350115 in a double blind study we have compared the e... Effect of acarbose, pectin, a combination of a... Acarbose 2 [Acarbose, Adult, Aged, Blood Glucose, metabol... 9663365 acarbose is an alpha glucosidase inhibitor app... Effects of beano on the tolerability and pharm... Acarbose 3 [Acarbose, administration dosage, Animals, B... 11779583 as alpha glucosidase inhibitor, the antidiabet... Chronic acarbose-feeding increases GLUT1 prote... Acarbose 4 [Acarbose, Aged, Blood Glucose, metabolism, Di... 9428831 to compare the therapeutic potential of acarbo... Efficacy of 24-week monotherapy with acarbose,... Acarbose drug_matches.to_csv('Drug_PMID_occurances.csv', index=False) chem_matches = pd.DataFrame() for chemical, m_df in chemical_list_df.groupby('Molecule/Enzyme/Protein'): chem_match = { 'PMID': [], 'title': [], 'abstract': [], 'MeSH': [] } hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query( match_phrase , abstract=chemical, ) for h in hits: chem_match['PMID'].append(h.pmid) chem_match['title'].append(h.title) chem_match['abstract'].append(h.abstract) chem_match['MeSH'].append(h.MeSH) chem_match_df = pd.DataFrame.from_dict(chem_match) chem_match_df['chemical'] = chemical chem_matches = chem_matches.append(chem_match_df) chem_matches.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title chemical 0 [] 31368101 coronary spasm plays an important role in the ... Association of East Asian Variant Aldehyde Deh... 4-hydroxy-2-nonenal (4-HNE) 1 [Acetylcholinesterase, metabolism, Aldehydes, ... 10463393 we have investigated the effect of soman induc... Increased levels of nitrogen oxides and lipid ... 4-hydroxy-2-nonenal (4-HNE) 2 [Aldehydes, chemistry, Amines, chemistry, Benz... 8448343 the reaction of trans 4 hydroxy 2 nonenal (4 h... Pyrrole formation from 4-hydroxynonenal and pr... 4-hydroxy-2-nonenal (4-HNE) 3 [Animals, Blood-Brain Barrier, metabolism, pat... 29775963 brain ischemic preconditioning (ipc) with mild... Brain ischemic preconditioning protects agains... 4-hydroxy-2-nonenal (4-HNE) 4 [Alzheimer Disease, drug therapy, enzymology, ... 30218858 excessive production of amyloid \u03b2 (a\u03b2) induced... Neuro-protective effects of aloperine in an Al... 4-hydroxy-2-nonenal (4-HNE) chem_matches.to_csv('Chemical_PMID_occurances.csv', index=False) chem_matches.merge(drug_matches[['PMID', 'drug']]) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } MeSH PMID abstract title chemical drug 0 [Anaphylaxis, metabolism, physiopathology, Ani... 8576313 nitric oxide, synthesized from the guanidino g... Role of nitric oxide in anaphylactic shock. Nitric oxide nitric oxide 1 [Animals, Blotting, Western, Denervation, Immu... 10391455 nitric oxide may be liberated as an inflammato... Evidence for nitric oxide and nitric oxide syn... Nitric oxide nitric oxide 2 [Administration, Inhalation, Adult, Aged, Atri... 15891329 to compare hemodynamic and gasometric variable... Lack of alteration of endogenous nitric oxide ... Nitric oxide nitric oxide 3 [Administration, Inhalation, Coronary Artery B... 8614135 increased pulmonary vascular resistance may gr... Effective control of pulmonary vascular resist... Nitric oxide nitric oxide 4 [1-Methyl-3-isobutylxanthine, pharmacology, An... 9722153 the structures capable of synthesizing cyclic ... Distribution of nitric oxide synthase and nitr... Nitric oxide nitric oxide 5 [Amino Acid Oxidoreductases, metabolism, Anima... 7543936 in the myenteric plexus of the guinea pig ileu... Analysis of connections between nitric oxide s... Nitric oxide nitric oxide 6 [Animals, Humans, Hypertension, metabolism, ph... 9914862 nitric oxide is hypothesized to be an inhibito... Neural mechanisms in nitric-oxide-deficient hy... Nitric oxide nitric oxide 7 [Amino Acid Oxidoreductases, biosynthesis, Ani... 7532824 nitric oxide is produced in the cns by both co... Modulation of inducible nitric oxide synthase ... Nitric oxide nitric oxide 8 [Administration, Inhalation, Animals, Drug Adm... 12594148 pulsed administration of nitric oxide has prov... Administration of nitric oxide into open lung ... Nitric oxide nitric oxide 9 [Adult, Female, Humans, Luminescent Measuremen... 10367927 nasal nitric oxide is present in high concentr... Nitric oxide accumulation in the nonventilated... Nitric oxide nitric oxide","title":"Find PMIDS assocaited with drugs and chemicals via elastic search"},{"location":"instructions/Query_Neo4j_Python/","text":"Querying a Neo4j Instance in Python This instruction set requires having a running Neo4j instance. Running Neo4j Neo4j is most easily run locally using the desktop GUI version. Alternatively from the command line it can be run with neo4j start Importing required modules from neo4j import GraphDatabase Initializing Driver and Creating Cypher Query The driver uses the neo4j-driver python package to connect via neo4j's api to my locally running Reactome Database. Queries are written the the Cypher query language. A good cheatsheet for commands can be found here # Initialize connection to database driver = GraphDatabase.driver('bolt://localhost:7687', auth=('neo4j', 'Akre1234')) query = 'MATCH (a:Drug) RETURN a.name, a.stId LIMIT 5' Run Cypher query and print desired results The query returned name and stId properties of 5 drugs. Each returned record will only contain the specified information form the query. with driver.session() as session: info = session.run(query) for item in info: print('Name:', item.values()[0], 'id:', item.values()[1]) Name: ['trastuzumab', 'herceptin', 'D5v8', 'R-597'] id: R-ALL-9634466 Name: ['CP-724714'] id: R-ALL-9649889 Name: ['Afatinib', 'BIBW2992', 'Irreversible TKI inhibitor afatinib generic inhibits EGFR and ERBB2 (HER2)'] id: R-ALL-1220577 Name: ['AZ5104'] id: R-ALL-9649879 Name: ['Sapitinib'] id: R-ALL-9649894","title":"Querying Neo4J in Python"},{"location":"instructions/Query_Neo4j_Python/#querying-a-neo4j-instance-in-python","text":"This instruction set requires having a running Neo4j instance.","title":"Querying a Neo4j Instance in Python"},{"location":"instructions/Query_Neo4j_Python/#running-neo4j","text":"Neo4j is most easily run locally using the desktop GUI version. Alternatively from the command line it can be run with neo4j start","title":"Running Neo4j"},{"location":"instructions/Query_Neo4j_Python/#importing-required-modules","text":"from neo4j import GraphDatabase","title":"Importing required modules"},{"location":"instructions/Query_Neo4j_Python/#initializing-driver-and-creating-cypher-query","text":"The driver uses the neo4j-driver python package to connect via neo4j's api to my locally running Reactome Database. Queries are written the the Cypher query language. A good cheatsheet for commands can be found here # Initialize connection to database driver = GraphDatabase.driver('bolt://localhost:7687', auth=('neo4j', 'Akre1234')) query = 'MATCH (a:Drug) RETURN a.name, a.stId LIMIT 5'","title":"Initializing Driver and Creating Cypher Query"},{"location":"instructions/Query_Neo4j_Python/#run-cypher-query-and-print-desired-results","text":"The query returned name and stId properties of 5 drugs. Each returned record will only contain the specified information form the query. with driver.session() as session: info = session.run(query) for item in info: print('Name:', item.values()[0], 'id:', item.values()[1]) Name: ['trastuzumab', 'herceptin', 'D5v8', 'R-597'] id: R-ALL-9634466 Name: ['CP-724714'] id: R-ALL-9649889 Name: ['Afatinib', 'BIBW2992', 'Irreversible TKI inhibitor afatinib generic inhibits EGFR and ERBB2 (HER2)'] id: R-ALL-1220577 Name: ['AZ5104'] id: R-ALL-9649879 Name: ['Sapitinib'] id: R-ALL-9649894","title":"Run Cypher query and print desired results"},{"location":"instructions/Query_Python_Elastic/","text":"Querying ElasticSearch in Python This instruction set requires having a running elasticsearch instance. Running the ElasticSearch Server To run the ElasticSearch instance in the cloud navigate to the folder ~/software/elasticsearch-6.5.4/bin: cd ~/software/elasticsearch-6.5.4/bin Then type: ./elasticsearch Importing required modules from elasticsearch import Elasticsearch from elasticsearch_dsl import Search, Q Connecting to the ElasticSearch Instance es = Elasticsearch() Example search on pubmed article title's search_term = 'herceptin' # `hits` variable will store all hits for the search term defined above hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query( match_phrase , title=search_term, # title is the defined field to look for search term in, can be modified to abstract/date/etc. ) Parsing hits for relevant pubmed articles for hit in hits: print('Title:',hit.title, 'PMID:', hit.pmid) Title: [Combination therapy herceptin+taxotere/Herceptin+navelbine]. PMID: 23573614 Title: Herceptin. PMID: 10214591 Title: [Herceptin]. PMID: 10883160 Title: Herceptin. PMID: 18071947 Title: [Herceptin (trastuzumab)]. PMID: 17687197 Title: Trastuzumab (herceptin). PMID: 21816914 Title: [Trastuzumab (Herceptin)]. PMID: 11977556 Title: Development of herceptin. PMID: 15687596 Title: Subcutaneous herceptin therapy. PMID: 23996323 Title: Dose scheduling--Herceptin. PMID: 11694785 # Showing available properties in the pubmed hit dir(hit) ['MeSH', 'abstract', 'date', 'journal', 'location', 'meta', 'pmid', 'title']","title":"Querying ElasticSearch in Python"},{"location":"instructions/Query_Python_Elastic/#querying-elasticsearch-in-python","text":"This instruction set requires having a running elasticsearch instance.","title":"Querying ElasticSearch in Python"},{"location":"instructions/Query_Python_Elastic/#running-the-elasticsearch-server","text":"To run the ElasticSearch instance in the cloud navigate to the folder ~/software/elasticsearch-6.5.4/bin: cd ~/software/elasticsearch-6.5.4/bin Then type: ./elasticsearch","title":"Running the ElasticSearch Server"},{"location":"instructions/Query_Python_Elastic/#importing-required-modules","text":"from elasticsearch import Elasticsearch from elasticsearch_dsl import Search, Q","title":"Importing required modules"},{"location":"instructions/Query_Python_Elastic/#connecting-to-the-elasticsearch-instance","text":"es = Elasticsearch()","title":"Connecting to the ElasticSearch Instance"},{"location":"instructions/Query_Python_Elastic/#example-search-on-pubmed-article-titles","text":"search_term = 'herceptin' # `hits` variable will store all hits for the search term defined above hits = Search( using=es, index= pubmed ).params( request_timeout=300 ).query( match_phrase , title=search_term, # title is the defined field to look for search term in, can be modified to abstract/date/etc. )","title":"Example search on pubmed article title's"},{"location":"instructions/Query_Python_Elastic/#parsing-hits-for-relevant-pubmed-articles","text":"for hit in hits: print('Title:',hit.title, 'PMID:', hit.pmid) Title: [Combination therapy herceptin+taxotere/Herceptin+navelbine]. PMID: 23573614 Title: Herceptin. PMID: 10214591 Title: [Herceptin]. PMID: 10883160 Title: Herceptin. PMID: 18071947 Title: [Herceptin (trastuzumab)]. PMID: 17687197 Title: Trastuzumab (herceptin). PMID: 21816914 Title: [Trastuzumab (Herceptin)]. PMID: 11977556 Title: Development of herceptin. PMID: 15687596 Title: Subcutaneous herceptin therapy. PMID: 23996323 Title: Dose scheduling--Herceptin. PMID: 11694785 # Showing available properties in the pubmed hit dir(hit) ['MeSH', 'abstract', 'date', 'journal', 'location', 'meta', 'pmid', 'title']","title":"Parsing hits for relevant pubmed articles"},{"location":"notes/Databases/","text":"Databases used in this project UniProt Two primary sections: 1. Swiss-Prot/ Reviewed: Manually annotated records 2. TrEMBL/ Unreviewed: Computationally annotated records Subset of UniProtKB \u2014 Proteomes data set Allows search via: BLAST (local alignment) Multiple sequence alignment ID Mapping \u2018Peptide search\u2019 for 3 or more residues Reactome Pathway Database Compilation of many sources of data including Kegg, UniProt, NCBI, Ensemble, etc. Manually curated, open-source, peer-reviewed Neo4J representation exists. Integrated with Spring Data Neo4j Tutorial on extracting different data types/building reactome cypher queries: https://reactome.org/dev/graph-database/extract-participating-molecules Drugbank Comprehensive free database of drugs and drug targets Well maintained 13k+ drug entries, 5k+ protein sequences (drug targets/enzymes/etc) Data base can be downloaded here Free for non-commercial use Contains sub databases to download as well (structures, protein identifiers, target sequences, etc.)","title":"Databases"},{"location":"notes/Databases/#databases-used-in-this-project","text":"","title":"Databases used in this project"},{"location":"notes/Databases/#uniprot","text":"Two primary sections: 1. Swiss-Prot/ Reviewed: Manually annotated records 2. TrEMBL/ Unreviewed: Computationally annotated records Subset of UniProtKB \u2014 Proteomes data set Allows search via: BLAST (local alignment) Multiple sequence alignment ID Mapping \u2018Peptide search\u2019 for 3 or more residues","title":"UniProt"},{"location":"notes/Databases/#reactome-pathway-database","text":"Compilation of many sources of data including Kegg, UniProt, NCBI, Ensemble, etc. Manually curated, open-source, peer-reviewed Neo4J representation exists. Integrated with Spring Data Neo4j Tutorial on extracting different data types/building reactome cypher queries: https://reactome.org/dev/graph-database/extract-participating-molecules","title":"Reactome Pathway Database"},{"location":"notes/Databases/#drugbank","text":"Comprehensive free database of drugs and drug targets Well maintained 13k+ drug entries, 5k+ protein sequences (drug targets/enzymes/etc) Data base can be downloaded here Free for non-commercial use Contains sub databases to download as well (structures, protein identifiers, target sequences, etc.)","title":"Drugbank"},{"location":"notes/ElasticSearch/","text":"ElasticSearch Searching Elastic Search for Articles that reference Drugs and Chemicals related to oxidative stress - Searched pubmed data for co-occurrence of a drug and chemical name in the abstract of a paper - Created list of documents each drug/chemical occurs in for later use Udemy Course Notes Section 2: Architecture of Elastic Search 5 shards per node default Collection of nodes called a cluster Rename cluster since nodes default to entering a cluster named elasticsearch default Default 1 replica per shard Primary shard written to first, then replicas updated Reading occurs on any shard in a replicate group Coordinating Node is the first node a client pings with a search query May not be node with shard containing results May not always be the same node Returns result query after pinging all shards in cluster Can specify how routing occurs Custom routing i.e sending documents to a node/shards based on country of origin The number of shards cannot change after creating an index Elastic cloud is 14day free trial for starting with elastic search and Kibana for ease of use Section 3: Installing ES and Kibana Running default elastic search cluster: ~/Tools/elasticsearch-7.3.2/bin/elasticsearch To ping cluster: curl http://localhost:9200 Change config file cluster name (config/elasticsearch.yml) Running Kibana in default: ~/Tools/kibana-7.3.2-darwin-x86_64/bin/kibana * Requires live elastic search cluster","title":"ElasticSearch"},{"location":"notes/ElasticSearch/#elasticsearch","text":"","title":"ElasticSearch"},{"location":"notes/ElasticSearch/#searching-elastic-search-for-articles-that-reference-drugs-and-chemicals-related-to-oxidative-stress","text":"- Searched pubmed data for co-occurrence of a drug and chemical name in the abstract of a paper - Created list of documents each drug/chemical occurs in for later use","title":"Searching Elastic Search for Articles that reference Drugs and Chemicals related to oxidative stress"},{"location":"notes/ElasticSearch/#udemy-course-notes","text":"","title":"Udemy Course Notes"},{"location":"notes/ElasticSearch/#section-2-architecture-of-elastic-search","text":"5 shards per node default Collection of nodes called a cluster Rename cluster since nodes default to entering a cluster named elasticsearch default Default 1 replica per shard Primary shard written to first, then replicas updated Reading occurs on any shard in a replicate group Coordinating Node is the first node a client pings with a search query May not be node with shard containing results May not always be the same node Returns result query after pinging all shards in cluster Can specify how routing occurs Custom routing i.e sending documents to a node/shards based on country of origin The number of shards cannot change after creating an index Elastic cloud is 14day free trial for starting with elastic search and Kibana for ease of use","title":"Section 2: Architecture of Elastic Search"},{"location":"notes/ElasticSearch/#section-3-installing-es-and-kibana","text":"Running default elastic search cluster: ~/Tools/elasticsearch-7.3.2/bin/elasticsearch To ping cluster: curl http://localhost:9200 Change config file cluster name (config/elasticsearch.yml) Running Kibana in default: ~/Tools/kibana-7.3.2-darwin-x86_64/bin/kibana * Requires live elastic search cluster","title":"Section 3: Installing ES and Kibana"},{"location":"notes/neo4j/","text":"Neo4j and Cypher Notes Creating Drug/Chemical Co-Occurrence Graph Data on occurance of drugs/chemicals in pubmed abstracts imported generated in section detailed in elasticsearch document Python neo4j-driver used to create a graph data base with the schema: Querying Reactome in Cypher Finding gene products associated with cellular response to oxidative stress MATCH (gt:GO_Term{accession: 0034599 })-[:goBiologicalProcess]-(p:Pathway)-[]-(r:Reaction)-[]-(ge:GenomeEncodedEntity) WHERE ge.speciesName = Homo sapiens RETURN DISTINCT ge.displayName LIMIT 10 Results \"2xHC-TXN2 [mitochondrial matrix]\" \"TXN [cytosol]\" \"P4HB [endoplasmic reticulum lumen]\" \"2xHC-TXN [cytosol]\" \"HC53,56-P4HB [endoplasmic reticulum lumen]\" \"TXN2 [mitochondrial matrix]\" Finding gene products associated with cardiovascular system disease MATCH (d:Disease)-[]-(p:PhysicalEntity) WHERE toLower(toString(d.displayName)) CONTAINS 'card' OR toLower(toString(d.displayName)) CONTAINS 'vasc' RETURN d.displayName, size((d)--(:Drug)) as Drugs, size((d)--(:GenomeEncodedEntity)) as GeneEntities, count(p) AS PhysicalEntityCount, size((d)--(:PhysicalEntity)--(:Disease)) as PEAssocDisease, size((d)--(:PhysicalEntity)--(:ReactionLikeEvent)) as PEAssocReactLike, size((d)--(:PhysicalEntity)--(:GenomeEncodedEntity)) as PEAssocGeneEntities ORDER BY PhysicalEntityCount DESC Results d.displayName Drugs GeneEntities PhysicalEntityCount \"cardiofaciocutaneous syndrome\" 0 23 34 \"myocardial infarction\" 20 0 20 \"basal ganglia cerebrovascular disease\" 0 6 7 \"cerebrovascular disease\" 5 0 5","title":"Neo4J And Cypher"},{"location":"notes/neo4j/#neo4j-and-cypher-notes","text":"","title":"Neo4j and Cypher Notes"},{"location":"notes/neo4j/#creating-drugchemical-co-occurrence-graph","text":"Data on occurance of drugs/chemicals in pubmed abstracts imported generated in section detailed in elasticsearch document Python neo4j-driver used to create a graph data base with the schema:","title":"Creating Drug/Chemical Co-Occurrence Graph"},{"location":"notes/neo4j/#querying-reactome-in-cypher","text":"","title":"Querying Reactome in Cypher"},{"location":"notes/neo4j/#finding-gene-products-associated-with-cellular-response-to-oxidative-stress","text":"MATCH (gt:GO_Term{accession: 0034599 })-[:goBiologicalProcess]-(p:Pathway)-[]-(r:Reaction)-[]-(ge:GenomeEncodedEntity) WHERE ge.speciesName = Homo sapiens RETURN DISTINCT ge.displayName LIMIT 10","title":"Finding gene products associated with cellular response to oxidative stress"},{"location":"notes/neo4j/#results","text":"\"2xHC-TXN2 [mitochondrial matrix]\" \"TXN [cytosol]\" \"P4HB [endoplasmic reticulum lumen]\" \"2xHC-TXN [cytosol]\" \"HC53,56-P4HB [endoplasmic reticulum lumen]\" \"TXN2 [mitochondrial matrix]\"","title":"Results"},{"location":"notes/neo4j/#finding-gene-products-associated-with-cardiovascular-system-disease","text":"MATCH (d:Disease)-[]-(p:PhysicalEntity) WHERE toLower(toString(d.displayName)) CONTAINS 'card' OR toLower(toString(d.displayName)) CONTAINS 'vasc' RETURN d.displayName, size((d)--(:Drug)) as Drugs, size((d)--(:GenomeEncodedEntity)) as GeneEntities, count(p) AS PhysicalEntityCount, size((d)--(:PhysicalEntity)--(:Disease)) as PEAssocDisease, size((d)--(:PhysicalEntity)--(:ReactionLikeEvent)) as PEAssocReactLike, size((d)--(:PhysicalEntity)--(:GenomeEncodedEntity)) as PEAssocGeneEntities ORDER BY PhysicalEntityCount DESC","title":"Finding gene products associated with cardiovascular system disease"},{"location":"notes/neo4j/#results_1","text":"d.displayName Drugs GeneEntities PhysicalEntityCount \"cardiofaciocutaneous syndrome\" 0 23 34 \"myocardial infarction\" 20 0 20 \"basal ganglia cerebrovascular disease\" 0 6 7 \"cerebrovascular disease\" 5 0 5","title":"Results"}]}